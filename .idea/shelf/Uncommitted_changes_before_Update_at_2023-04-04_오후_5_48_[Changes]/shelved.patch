Index: src/java0321/Book.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java0321/Book.java b/src/java0321/Book.java
new file mode 100644
--- /dev/null	(date 1679385761309)
+++ b/src/java0321/Book.java	(date 1679385761309)
@@ -0,0 +1,24 @@
+package java0321;
+
+public class Book {//this<-사용은 잘 안 함, 먼저 초기 값을 줄 때 사용
+    String title;
+    String author;
+    void show(){
+        System.out.println(title+""+author);
+    }
+    public Book(){
+        this("","홍길동");//""<-파라메타가 들어올 자리라는 것을 알림
+    }
+    public Book(String title){
+        //this.title=title;//<-아래로 고친 이유?
+        this(title,"작가 미상");
+    }
+    public Book(String title,String author){
+        this.title=title;
+        this.author=author;
+    }
+    public static void main(String []args){
+        Book empthBook=new Book("자바를 배우자 ");
+        empthBook.show();
+    }
+}
\ No newline at end of file
Index: src/java0321/MyDataTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java0321/MyDataTest.java b/src/java0321/MyDataTest.java
new file mode 100644
--- /dev/null	(date 1679386802040)
+++ b/src/java0321/MyDataTest.java	(date 1679386802040)
@@ -0,0 +1,11 @@
+package java0321;
+
+public class MyDataTest {
+    public static void main(String[] args) {
+        MyData myDate = new MyData();
+        //MyDate.day=31;
+        myDate.setDay(31);
+        int day=myDate.getDay();
+        System.out.println(day);
+    }
+}
Index: src/java0321/MyData.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java0321/MyData.java b/src/java0321/MyData.java
new file mode 100644
--- /dev/null	(date 1679387262636)
+++ b/src/java0321/MyData.java	(date 1679387262636)
@@ -0,0 +1,41 @@
+package java0321;
+
+public class MyData {
+    private int day;
+    //private int month;//<-이걸로 쓰면 31
+    private int month=2;//2로 초기화시키지 않으면 31을 넣던 관계없이 그 값이 나온다
+    private int year;
+    public void setDay(int day){
+        if (month==2){//윤달
+            if(day<1||day>28){
+                System.out.println("날짜 형식이 맞지 않습니다");
+            }
+            else {
+                this.day=day;
+            }
+        }
+        else{//<-이걸 추가 안하면 0으로 결과값이 나옴
+            this.day=day;
+        }
+    }
+    public int getDay(){
+        return this.day;
+    }
+    /*
+    //alt+insert
+    public int getMonth() {
+        return month;
+    }
+
+    public int getMonth(int month) {
+        return month;
+    }
+
+    public int getYear() {
+        return year;
+    }
+
+     */
+
+
+}
Index: src/java0314/Casting.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package java0314;\r\n\r\npublic class Casting {\r\n\r\n    public static void implicit(){//암묵적\r\n        byte bNum=10;//1byte\r\n        int iNum=bNum;//4byte\r\n        System.out.println(bNum);\r\n        System.out.println(iNum);\r\n\r\n        int iNum2=20;\r\n        float fNum=iNum;\r\n        System.out.println(iNum);\r\n        System.out.println(fNum);\r\n\r\n        double dNum;\r\n        dNum=fNum+iNum;\r\n        System.out.println(dNum);//더블형은 자동 형변환\r\n    }\r\n\r\n    public static void explicit(){//명시적\r\n        double dNum=1.2;\r\n        float fNum=0.9f;//0.9를 캐스팅하면 0\r\n\r\n        int iNum=(int) (dNum+fNum);//int로 변환\r\n        int iNum2=(int)dNum+(int)fNum;\r\n\r\n        System.out.println(iNum);\r\n        System.out.println(iNum2);\r\n\r\n    }\r\n    public static void main(String[] args) {\r\n        //암묵적 캐스팅\r\n        implicit();\r\n        System.out.println(\"=======\");\r\n\r\n        //명시적 캐스팅\r\n        explicit();\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java0314/Casting.java b/src/java0314/Casting.java
--- a/src/java0314/Casting.java	(revision ab115efe83d7df0953be3edf53ff263bab3167c4)
+++ b/src/java0314/Casting.java	(date 1680584589742)
@@ -5,17 +5,17 @@
     public static void implicit(){//암묵적
         byte bNum=10;//1byte
         int iNum=bNum;//4byte
-        System.out.println(bNum);
-        System.out.println(iNum);
+        System.out.println(bNum);//->10
+        System.out.println(iNum);//->10
 
         int iNum2=20;
         float fNum=iNum;
-        System.out.println(iNum);
-        System.out.println(fNum);
+        System.out.println(iNum);//->10
+        System.out.println(fNum);//->10.0
 
         double dNum;
         dNum=fNum+iNum;
-        System.out.println(dNum);//더블형은 자동 형변환
+        System.out.println(dNum);//더블형은 자동 형변환//->20.0
     }
 
     public static void explicit(){//명시적
@@ -25,8 +25,8 @@
         int iNum=(int) (dNum+fNum);//int로 변환
         int iNum2=(int)dNum+(int)fNum;
 
-        System.out.println(iNum);
-        System.out.println(iNum2);
+        System.out.println(iNum);//->2
+        System.out.println(iNum2);//->1
 
     }
     public static void main(String[] args) {
Index: src/java0321/CountinueBreak.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java0321/CountinueBreak.java b/src/java0321/CountinueBreak.java
new file mode 100644
--- /dev/null	(date 1679379909962)
+++ b/src/java0321/CountinueBreak.java	(date 1679379909962)
@@ -0,0 +1,26 @@
+package java0321;
+
+public class CountinueBreak {
+    public static void main(String[] args) {
+        int total=0;
+        int sum=0;
+
+        for(int num=1;num<=100;num++){
+            if(num % 2==0) {//나머지가 0일 때
+                continue;
+            }
+            total+=num;
+        }
+        System.out.println("1부터 100까지 홀수의 합은"+total+"입니다");
+
+        int num;
+        for(num=0;;num++){
+            sum+=num;
+            if(sum>=100){//if문이 없으면 무한 반복
+                break;//countinue와의 차이점
+            }
+        }
+        System.out.println("num : "+num);//14까지는 더해야 100이 넘어간다
+        System.out.println("num : "+sum);
+    }
+}
Index: src/java0314/SwitchCase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package java0314;\r\n\r\npublic class SwitchCase {\r\n    public static void intCase(int reanking){\r\n        char medalColor;\r\n        switch (reanking){\r\n            case 1:medalColor='G';\r\n                break;//break가 없으면 모두 실행되기 때문에 꼭 넣기\r\n            case 2:medalColor='S';\r\n                break;\r\n            case 3:medalColor='B';\r\n                break;\r\n            default:medalColor='A';//default도 잊지 않고 넣기\r\n        }\r\n        System.out.println(reanking+\"등 메달의 색깔은\"+medalColor+\"입니다\");\r\n    }\r\n    public static void main(String[] args) {\r\n        int ranking=1;\r\n        String medal=\"Gold\";\r\n        intCase(ranking);\r\n\r\n        int month=3;\r\n        int day;\r\n        switch (month){\r\n            case 1: case 3: case 5: case 7: case 8: case 10: case 12: day = 31;//여러개 사용 가능\r\n                break;\r\n            case 4: case 6: case 9: case 11: day=30;\r\n                break;\r\n            case 2:day=28;\r\n                break;\r\n\r\n        }\r\n        System.out.println(month+\"월\");\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java0314/SwitchCase.java b/src/java0314/SwitchCase.java
--- a/src/java0314/SwitchCase.java	(revision ab115efe83d7df0953be3edf53ff263bab3167c4)
+++ b/src/java0314/SwitchCase.java	(date 1680583787063)
@@ -1,9 +1,9 @@
 package java0314;
 
 public class SwitchCase {
-    public static void intCase(int reanking){
+    public static void intCase(int ranking){
         char medalColor;
-        switch (reanking){
+        switch (ranking){
             case 1:medalColor='G';
                 break;//break가 없으면 모두 실행되기 때문에 꼭 넣기
             case 2:medalColor='S';
@@ -12,7 +12,7 @@
                 break;
             default:medalColor='A';//default도 잊지 않고 넣기
         }
-        System.out.println(reanking+"등 메달의 색깔은"+medalColor+"입니다");
+        System.out.println(ranking+"등 메달의 색깔은"+medalColor+"입니다");
     }
     public static void main(String[] args) {
         int ranking=1;
Index: src/java0321/Array.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java0321/Array.java b/src/java0321/Array.java
new file mode 100644
--- /dev/null	(date 1679381050140)
+++ b/src/java0321/Array.java	(date 1679381050140)
@@ -0,0 +1,28 @@
+package java0321;
+
+public class Array {
+    public static void main(String[] args) {
+        int array[]=new int[5];
+        int size=array.length;
+        System.out.println(size);
+
+        int intArray[]={1,2,3,4,5,6};
+        for(int i=0;i<intArray.length;i++){
+            System.out.println("intArray["+i+"]"+intArray[i]);
+        }
+
+        String strArr[]={"강아지","고양이","개구리","병아리","토끼"};
+        for(String str : strArr){//forloop
+            System.out.println(str);
+        }
+        for (int i=0;i<strArr.length;i++){
+            System.out.println("strArr["+i+"] = "+strArr[i]);
+        }
+
+        //2차원 배열
+        int intArray2[][]=new int[2][5];//두 번째 배열의 값에 따라 바뀌네
+        System.out.println("intArray2.length"+intArray2.length);
+        System.out.println("intArray2[0].length : "+intArray2[0].length);
+        System.out.println("intArray2[1].length : "+intArray2[1].length);
+    }
+}
Index: src/java0321/SwitchCase_2.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package java0321;\r\n\r\npublic class SwitchCase_2 {\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java0321/SwitchCase_2.java b/src/java0321/SwitchCase_2.java
--- a/src/java0321/SwitchCase_2.java	(revision ab115efe83d7df0953be3edf53ff263bab3167c4)
+++ b/src/java0321/SwitchCase_2.java	(date 1679378824372)
@@ -2,4 +2,4 @@
 
 public class SwitchCase_2 {
 
-}
+}
\ No newline at end of file
Index: src/java0321/MethodReturn.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/java0321/MethodReturn.java b/src/java0321/MethodReturn.java
new file mode 100644
--- /dev/null	(date 1679381002522)
+++ b/src/java0321/MethodReturn.java	(date 1679381002522)
@@ -0,0 +1,20 @@
+package java0321;
+
+public class MethodReturn {
+    public static int[] makeArray(){//이걸 잘 맞춰줘야 함
+        int temp[]=new int[20];
+        for(int i =0;i<temp.length;i++){
+            temp[i]=i;
+        }
+        return temp;
+    }
+    public static void main(String[] args) {
+        int intArray[]=makeArray();//이것과
+        int sum=0;
+        for(int i=0;i<intArray.length;i++){//=(int i : intArray)
+            sum+=i;
+            System.out.println(i);
+        }
+        System.out.println(sum);
+    }
+}
